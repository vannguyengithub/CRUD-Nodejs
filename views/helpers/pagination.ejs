<%
    paginationHelper = (paginationObj, type ,currentStatus, keyword) => {

        let totalItems          = paginationObj.totalItem;
        
        let totalItemPerPage    = paginationObj.totalItemPerPage;

        let totalPages          = Math.ceil(totalItems/totalItemPerPage);

        let currentPage         = paginationObj.currentPage;
        let pageRanges         = paginationObj.pageRanges;
  
        let to                  = totalItemPerPage * currentPage;
        let from                = to - totalItems + 1;
        if(to > totalItems) to  = totalItems;
        
        let xhtmlPagination     =  '';
        let xhtmlStart          =  '<li class="disabled"><a>Start</a></li>';
        let xhtmlPrevious       =  '<li class="disabled"><a>Previous</a></li>';
        let xhtmlNext           =  '<li class="disabled"><a>Next</a></li>';
        let xhtmlEnd            =  '<li class="disabled"><a>End</a></li>';
        let link                =  systemConfig.prefixAdmin + '/'+ type +'/' + currentStatus;
        if(currentStatus !== '') link += '?keyword=' + keyword + '&page=';
        else link += '?page=';

        let xhtmlPages          = '';
        
        if( currentPage > 1) {
            xhtmlStart      = `<li><a href="${link}">Start</a></li>`;
            xhtmlPrevious   = `<li><a href="${link}${currentPage-1}">Previous</a></li>`;
            xhtmlNext       = `<li><a href="${link}${currentPage+1}">Next</a></li>`;
        }

        if( currentPage < totalPages) {
            xhtmlEnd        = `<li><a href="${link}${totalPages}">End</a></li>`;
            xhtmlNext       = `<li><a href="${link}${currentPage+1}">Next</a></li>`;
        }

        let middle = Math.ceil(pageRanges/2)
        let min = currentPage - middle + 1;
        let max = min + pageRanges - 1;

        if(min <= 1) {
            min = 1;
        }

        if(max >= totalPages) {
            max = totalPages;
            min = max - pageRanges + 1;
        }

        for(let i = min; i <= max; i++) {
            if(i == currentPage) {
                xhtmlPages  += `<li class="active"><a>${i}</a></li>`;
            } else {
                xhtmlPages  += `<li><a href="${link}${i}">${i}</a></li>`;
            }
        }


        xhtmlPagination = '<ul class="pagination text-center">' + xhtmlStart + xhtmlPrevious + xhtmlPages + xhtmlNext + xhtmlEnd + '</ul>';


        return `
            <div class="panel panel-info" id="pagination">
                <div class="panel-heading">
                    Pagination
                    <span class="label label-warning">Total pages: ${totalPages}</span>
                    <span class="label label-danger">Total entries: ${totalItems}</span>
                </div>

                <div class="panel-body">
                    <div class="infor-pagination">
                        <p>
                            Number of entries on the page: <span>${totalItemPerPage}</span>
                        </p>

                        <p>
                            Showing
                            <span> ${from} </span> to <span> ${to} </span>
                             of 
                            <span> ${totalItems} </span> entries
                        </p>
                    </div>
                    <div class="ad-pagination">
                        ${xhtmlPagination}
                    </div>
                </div>
            </div> `;
    }
%>

